name: Tests and build wheels

on: push

jobs:
  ci:
    name: ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04, windows-2022, macos-11 ]
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]

    steps:
      - name: Set git to not change line endings
        run: git config --global core.autocrlf false
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install and run PyTest
        run: |
          pip install wheel setuptools
          pip install -r tests/requirements.txt
          pip install . -v
          python -c "import sabyenc3; print(sabyenc3.__version__); print(sabyenc3.decoder_simd);"
          pytest

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: ci
    runs-on: ${{ matrix.os }}
    env:
      TWINE_USERNAME: '__token__'
      TWINE_PASSWORD: ${{ secrets.PYPI_SABYENC_API_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2022, macos-11]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.10'
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Build sdist
        run: python setup.py sdist
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_SKIP: pp* *musllinux* cp36*
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_ARCHS_MACOS: universal2
          CIBW_BUILD_VERBOSITY: 1
      - uses: actions/upload-artifact@v2
        with:
          path: |
            ./wheelhouse/*.whl
            ./dist/*.tar.gz
      - name: Publish wheels to PyPI
        if: env.TWINE_PASSWORD && startsWith(github.ref, 'refs/tags/')
        run: |
          pip install twine
          twine upload --skip-existing ./dist/*.tar.gz ./wheelhouse/*.whl